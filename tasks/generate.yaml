- name: "Print registration infos"
  ansible.builtin.debug:
    msg:
      - "url: https://{{ global_registration_capsule }}:{{ global_registration_port }}/api/registration_commands"
      - "Organization: {{ global_registration_organization_id }} / {{ global_registration_organization }}"
      - "Location: {{ global_registration_location_id }} / {{ global_registration_location }}"
      - "Smart Proxy: {{ global_registration_smart_proxy_id }}"
  when: global_registration_debug

- name: Get registration command from Satellite
  ansible.builtin.uri:
    url: "https://{{ global_registration_capsule }}:{{ global_registration_port }}/api/registration_commands"
    user: "{{ global_registration_username }}"
    password: "{{ global_registration_password }}"
    force_basic_auth: "{{ global_registration_force_basic_auth }}"
    validate_certs: "{{ global_registration_validate_certs }}"
    method: "POST"
    body_format: json
    body:
      registration_command:
        organization_id: "{{ global_registration_organization_id }}"
        location_id: "{{ global_registration_location_id }}"
        hostgroup_id: "{{ global_registration_hostgroup_id | default(omit) }}"
        operatingsystem_id: "{{ global_registration_operatingsystem_id | default(omit) }}"
        smart_proxy_id: "{{ global_registration_smart_proxy_id | default(omit) }}"
        setup_insights: "{{ global_registration_setup_insights }}"
        setup_remote_execution: "{{ global_registration_setup_remote_execution }}"
        jwt_expiration: "{{ global_registration_token_life_time }}"
        insecure: "! {{ global_registration_validate_certs }}"
        packages: "{{ global_registration_packages | default(omit) }}"
        update_packages: "{{ global_registration_update_packages }}"
        repo: "{{ global_registration_repo | default(omit) }}"
        repo_gpg_key_url: "{{ global_registration_repo_gpg_key_url | default(omit) }}"
        remote_execution_interface: "{{ global_registration_remote_interface | default(omit) }}"
        setup_remote_execution_pull: "{{ global_remote_execution_pull }}"
        activation_keys: "{{ global_registration_activation_keys.split(',') | default(omit) }}"
        lifecycle_environment_id: "{{ global_registration_lifecycle_environment_id | default(omit) }}"
        force: "{{ global_registration_force }}"
        ignore_subman_errors: "{{ global_registration_ignore_subman_errors }}"
    status_code: 200
  register: global_registration_result

- name: Set registration command
  ansible.builtin.set_fact:
    global_registration_command: "{{ global_registration_result.json.registration_command }}"

- name: "Print registration command"
  ansible.builtin.debug:
    msg: "{{ global_registration_command }}"
  when: global_registration_debug
